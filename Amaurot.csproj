<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<OutputType>WinExe</OutputType>
		<TargetFramework>net8.0-windows</TargetFramework>
		<RootNamespace>Amaurot</RootNamespace>
		<Nullable>enable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
		<UseWPF>true</UseWPF>
		<UseWindowsForms>true</UseWindowsForms>
		
		<GenerateAssemblyInfo>false</GenerateAssemblyInfo>
		<GenerateTargetFrameworkAttribute>false</GenerateTargetFrameworkAttribute>
		
		<DisableWPFHardwareAcceleration>true</DisableWPFHardwareAcceleration>
		<WpfDisableAnimations>false</WpfDisableAnimations>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="DotNetZip" Version="1.16.0" />
		<PackageReference Include="EntityFramework" Version="6.0.0" />
		<PackageReference Include="Lumina" Version="6.3.0" />
		<PackageReference Include="Lumina.Excel" Version="7.2.3" />
		<PackageReference Include="Lumina.Generated" Version="5.30.2" />
		<PackageReference Include="Machina.FFXIV" Version="2.4.1" />
		<PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
		<PackageReference Include="System.Data.SQLite.Core" Version="1.0.119" />
		
		<PackageReference Include="System.Drawing.Common" Version="8.0.0" />
	</ItemGroup>

	<ItemGroup>
		<Reference Include="SaintCoinach">
			<HintPath>Libs\SaintCoinach.dll</HintPath>
		</Reference>
		<Reference Include="DotSquish">
			<HintPath>Libs\DotSquish.dll</HintPath>
		</Reference>
	</ItemGroup>

	<ItemGroup>
		<Content Include="Libs\Definitions\**\*.*">
			<Link>Definitions\%(RecursiveDir)%(Filename)%(Extension)</Link>
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</Content>
	</ItemGroup>

	<ItemGroup>
	  <Compile Remove="LGB-Parser\**" />
	  <Compile Remove="notes\**" />
	  <Compile Remove="Resources\LgbData\**" />
	  <Compile Remove="unluac\**" />
	  <EmbeddedResource Remove="LGB-Parser\**" />
	  <EmbeddedResource Remove="notes\**" />
	  <EmbeddedResource Remove="Resources\LgbData\**" />
	  <EmbeddedResource Remove="unluac\**" />
	  <None Remove="LGB-Parser\**" />
	  <None Remove="notes\**" />
	  <None Remove="Resources\LgbData\**" />
	  <None Remove="unluac\**" />
	  <Page Remove="LGB-Parser\**" />
	  <Page Remove="notes\**" />
	  <Page Remove="Resources\LgbData\**" />
	  <Page Remove="unluac\**" />
	  
	</ItemGroup>

	<ItemGroup>
	  <None Remove="amaurot.ico" />
	  <None Remove="Resources\planevent.lgb.json" />
	</ItemGroup>

	<ItemGroup>
	  <None Include="map editor.sln" />
	</ItemGroup>
	<ItemGroup>
	  <Content Update="Libs\Definitions\EObj.json" Link="Definitions\EObj.json" />
	  <Content Update="Libs\Definitions\Map.json">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </Content>
	  <Content Update="Libs\Definitions\MapMarker.json">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </Content>
	  <Content Update="Libs\Definitions\MapSymbol.json">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </Content>
	  <Content Update="Libs\Definitions\PlaceName.json">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </Content>
	  <Content Update="Libs\Definitions\TerritoryType.json">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </Content>
	</ItemGroup>
	<ItemGroup>
	  <Resource Include="amaurot.ico" />
	</ItemGroup>
	<ItemGroup>
	  <None Update="Libs\app_data.sqlite">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </None>
	  <None Update="Libs\Definitions\BNpcBase.json">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </None>
	  <None Update="Libs\Definitions\BNpcName.json">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </None>
	  <None Update="Libs\Definitions\CompleteJournal.json">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </None>
	  <None Update="Libs\Definitions\ENpcBase.json">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </None>
	  <None Update="Libs\Definitions\ENpcResident.json">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </None>
	  <None Update="Libs\Definitions\EObj.json">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </None>
	  <None Update="Libs\Definitions\EObjName.json">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </None>
	  <None Update="Libs\Definitions\Fate.json">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </None>
	  <None Update="Libs\Definitions\game.ver">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </None>
	  <None Update="Libs\Definitions\InstanceContent.json">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </None>
	  <None Update="Libs\Definitions\JournalGenre.json">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </None>
	  <None Update="Libs\Definitions\Level.json">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </None>
	  <None Update="Libs\Definitions\Map.json">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </None>
	  <None Update="Libs\Definitions\MapMarker.json">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </None>
	  <None Update="Libs\Definitions\MapSymbol.json">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </None>
	  <None Update="Libs\Definitions\PlaceName.json">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </None>
	  <None Update="Libs\Definitions\Quest.json">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </None>
	  <None Update="Libs\Definitions\TerritoryType.json">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </None>
	  <None Update="Libs\MonsterData.csv">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </None>
	</ItemGroup>
	<ItemGroup>
	  <Folder Include="Resources\" />
	  <Folder Include="Tools\" />
	</ItemGroup>

  <!-- Build and copy LGB-Parser -->
  <Target Name="BuildAndCopyLgbParser" AfterTargets="Build">
    
    <Message Text="🔧 Building LGB-Parser separately..." Importance="high" />
    
    <PropertyGroup>
      <LgbParserProjectPath>$(MSBuildProjectDirectory)\..\LGB-Parser</LgbParserProjectPath>
      <LgbParserBinPath>$(LgbParserProjectPath)\bin\$(Configuration)\net8.0</LgbParserBinPath>
      <LgbParserExePath>$(LgbParserBinPath)\LGB-Parser.exe</LgbParserExePath>
    </PropertyGroup>
    
    <Message Text="🧹 Cleaning LGB-Parser..." Importance="high" />
    <Exec Command="dotnet clean &quot;$(LgbParserProjectPath)\LGB-Parser.csproj&quot; --configuration $(Configuration)" ContinueOnError="false" WorkingDirectory="$(LgbParserProjectPath)" />
    
    <Message Text="🔨 Building LGB-Parser..." Importance="high" />
    <Exec Command="dotnet build &quot;$(LgbParserProjectPath)\LGB-Parser.csproj&quot; --configuration $(Configuration) --no-restore" ContinueOnError="false" WorkingDirectory="$(LgbParserProjectPath)" />
    
    <Error Condition="!Exists('$(LgbParserExePath)')" Text="❌ LGB-Parser.exe was not created at: $(LgbParserExePath)" />
    
    <MakeDir Directories="$(OutputPath)Tools" />
    
    <Copy SourceFiles="$(LgbParserExePath)" DestinationFolder="$(OutputPath)Tools" SkipUnchangedFiles="true" />
    
    <Copy SourceFiles="$(LgbParserBinPath)\LGB-Parser.runtimeconfig.json" DestinationFolder="$(OutputPath)Tools" SkipUnchangedFiles="true" ContinueOnError="false" />
    
    <Copy SourceFiles="$(LgbParserBinPath)\LGB-Parser.deps.json" DestinationFolder="$(OutputPath)Tools" SkipUnchangedFiles="true" ContinueOnError="true" />
    
    <ItemGroup>
      <LgbParserDependencies Include="$(LgbParserBinPath)\*.dll" />
      
      <AmaurotDependencies Include="$(OutputPath)*.dll" />
      
      <UniqueLgbParserDependencies Include="@(LgbParserDependencies)" Condition="!Exists('$(OutputPath)%(Filename)%(Extension)')" />
    </ItemGroup>
    
    <Copy SourceFiles="@(UniqueLgbParserDependencies)" DestinationFolder="$(OutputPath)Tools" SkipUnchangedFiles="true" ContinueOnError="true" />
    
    <Message Text="✅ Successfully built and copied LGB-Parser.exe with runtime configuration" Importance="high" />
    <Message Text="📄 Copied files: LGB-Parser.exe, runtimeconfig.json, and unique dependencies only" Importance="high" />
    
  </Target>

  <!-- Build and copy unluac -->
  <Target Name="BuildAndCopyUnluac" AfterTargets="BuildAndCopyLgbParser">
    
    <Message Text="🔧 Building unluac from submodule..." Importance="high" />
    
    <PropertyGroup>
      <UnluacSubmodulePath>$(MSBuildProjectDirectory)\unluac</UnluacSubmodulePath>
      <UnluacBuildScript>$(UnluacSubmodulePath)\build.sh</UnluacBuildScript>
      <UnluacBinJarPath>$(UnluacSubmodulePath)\bin\unluac.jar</UnluacBinJarPath>
      <UnluacDestinationPath>$(OutputPath)Tools\unluac.jar</UnluacDestinationPath>
    </PropertyGroup>
    
    <!-- Check if submodule exists and has content -->
    <Message Text="🔍 Checking unluac submodule at: $(UnluacSubmodulePath)" Importance="high" />
    
    <!-- Initialize submodule if it doesn't exist or is empty -->
    <Exec Command="git submodule update --init --recursive" 
          ContinueOnError="true" 
          WorkingDirectory="$(MSBuildProjectDirectory)"
          Condition="!Exists('$(UnluacSubmodulePath)\src')" />
    
    <!-- Check if the submodule has source files -->
    <ItemGroup>
      <UnluacSourceFiles Include="$(UnluacSubmodulePath)\src\**\*.java" />
    </ItemGroup>
    
    <Message Text="📂 Found $(UnluacSourceFiles->Count()) Java source files in unluac submodule" Importance="high" />
    
    <!-- Create Tools directory -->
    <MakeDir Directories="$(OutputPath)Tools" />
    
    <!-- Method 1: Try using the build.sh script (preferred) -->
    <Message Text="🛠️ Attempting to build unluac using build.sh script..." Importance="high" 
             Condition="Exists('$(UnluacBuildScript)') And '@(UnluacSourceFiles)' != ''" />
    
    <!-- Try with bash (Git Bash, WSL, Linux, macOS) -->
    <Exec Command="bash build.sh" 
          ContinueOnError="true" 
          WorkingDirectory="$(UnluacSubmodulePath)"
          Condition="Exists('$(UnluacBuildScript)') And '@(UnluacSourceFiles)' != ''" />
    
    <!-- Try with sh if bash failed -->
    <Exec Command="sh build.sh" 
          ContinueOnError="true" 
          WorkingDirectory="$(UnluacSubmodulePath)"
          Condition="Exists('$(UnluacBuildScript)') And '@(UnluacSourceFiles)' != '' And !Exists('$(UnluacBinJarPath)')" />
    
    <!-- Method 2: Manual Java compilation if build.sh failed -->
    <Message Text="🔨 build.sh failed, trying manual Java compilation..." Importance="high" 
             Condition="'@(UnluacSourceFiles)' != '' And !Exists('$(UnluacBinJarPath)')" />
    
    <!-- Create build directories -->
    <MakeDir Directories="$(UnluacSubmodulePath)\build" 
             Condition="'@(UnluacSourceFiles)' != '' And !Exists('$(UnluacBinJarPath)')" />
    <MakeDir Directories="$(UnluacSubmodulePath)\bin" 
             Condition="'@(UnluacSourceFiles)' != '' And !Exists('$(UnluacBinJarPath)')" />
    
    <!-- Compile Java source files -->
    <Exec Command="javac -deprecation -d build -sourcepath src src\unluac\*.java" 
          ContinueOnError="true" 
          WorkingDirectory="$(UnluacSubmodulePath)"
          Condition="'@(UnluacSourceFiles)' != '' And !Exists('$(UnluacBinJarPath)')" />
    
    <!-- Create JAR file with manifest -->
    <Exec Command="jar -cfm bin\unluac.jar src\unluac\Manifest.mf -C build ." 
          ContinueOnError="true" 
          WorkingDirectory="$(UnluacSubmodulePath)"
          Condition="Exists('$(UnluacSubmodulePath)\build') And !Exists('$(UnluacBinJarPath)')" />
    
    <!-- Method 3: Look for pre-built JAR files -->
    <ItemGroup Condition="!Exists('$(UnluacBinJarPath)')">
      <PossibleUnluacJars Include="$(UnluacSubmodulePath)\**\unluac*.jar" />
      <PossibleUnluacJars Include="$(UnluacSubmodulePath)\**\*.jar" />
    </ItemGroup>
    
    <PropertyGroup Condition="'@(PossibleUnluacJars)' != '' And !Exists('$(UnluacBinJarPath)')">
      <UnluacBinJarPath>@(PossibleUnluacJars -> '%(FullPath)' -> FirstOrDefault())</UnluacBinJarPath>
    </PropertyGroup>
    
    <!-- Copy the JAR file to Tools directory -->
    <Copy SourceFiles="$(UnluacBinJarPath)" 
          DestinationFiles="$(UnluacDestinationPath)" 
          SkipUnchangedFiles="true" 
          Condition="Exists('$(UnluacBinJarPath)')" />
    
    <!-- Report build results -->
    <Message Text="Successfully built and copied unluac.jar to Tools directory!" 
             Importance="high" 
             Condition="Exists('$(UnluacDestinationPath)')" />
    
    <Message Text="unluac.jar available at: $(UnluacDestinationPath)" 
             Importance="high" 
             Condition="Exists('$(UnluacDestinationPath)')" />
    
    <Warning Text="unluac.jar could not be built automatically. Check if Java compiler (javac) is installed and in PATH." 
             Condition="'@(UnluacSourceFiles)' != '' And !Exists('$(UnluacDestinationPath)')" />
    
    <Warning Text="unluac submodule appears to be empty. Run 'git submodule update --init --recursive' manually." 
             Condition="'@(UnluacSourceFiles)' == ''" />
    
    <Message Text="Manual setup: You can also download unluac.jar from https://sourceforge.net/projects/unluac/ and place it in the Tools directory" 
             Importance="high" 
             Condition="!Exists('$(UnluacDestinationPath)')" />
    
  </Target>
</Project>